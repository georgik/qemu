name: build-qemu-ubuntu-dispatch

on:
  workflow_dispatch

jobs:
  get_release:
    # https://github.com/octokit/request-action
    name: Get release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.get_upload_url.outputs.url }}
    steps:
    - uses: octokit/request-action@v2.x
      id: get_latest_release
      with:
        route: GET /repos/{owner}/{repo}/releases/latest
        owner: georgik
        repo: qemu
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: get upload url
      id: get_upload_url
      run: |
        url=$(echo "$response" | jq -r '.upload_url')
        echo "::set-output name=url::$url"
      env:
        response:  ${{ steps.get_latest_release.outputs.data }}

  build-qemu:
    name: Build qemu for ${{ matrix.os }}
    # needs: create_release
    needs: get_release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest]
        include:
        - os: macos-latest
          ASSET_PATH: 'build.tar.xz'
          ASSET_NAME: 'qemu-esp-develop-20210826-x86_64-apple-darwin.tar.xz'
          ASSET_CONTENT_TYPE: 'application/x-tar'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          ref: esp-develop
          submodules: true
      - name: Setup Ninja
        if: ${{ matrix.os == 'macos-latest' || matrix.os == 'ubuntu-latest' || matrix.os == 'ubuntu-18.04' || matrix.os == 'windows-latest' }}
        uses: seanmiddleditch/gha-setup-ninja@master
      - name: Prepare build
        run: |
          ./configure --target-list=xtensa-softmmu \
          --enable-gcrypt \
          --enable-debug --enable-sanitizers \
          --disable-strip --disable-user \
          --disable-capstone --disable-vnc \
          --disable-sdl --disable-gtk \
      - name: Build with
        if: ${{ matrix.os == 'macos-latest' || matrix.os == 'ubuntu-latest' || matrix.os == 'ubuntu-18.04' }}
        run: ninja -C build
      - name: Create release artifact
        run: tar cJf build.tar.xz build
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.get_release.outputs.upload_url }}
          asset_path: ${{ matrix.ASSET_PATH }}
          asset_name: ${{ matrix.ASSET_NAME }}
          asset_content_type: ${{ matrix.ASSET_CONTENT_TYPE }}
